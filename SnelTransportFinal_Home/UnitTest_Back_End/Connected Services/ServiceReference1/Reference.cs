//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitTest_Back_End.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Back_End")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseNumber {
            get {
                return this.HouseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseNumberField, value) != true)) {
                    this.HouseNumberField = value;
                    this.RaisePropertyChanged("HouseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Distance_Table", Namespace="http://schemas.datacontract.org/2004/07/Back_End")]
    [System.SerializableAttribute()]
    public partial class Distance_Table : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DistanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfigOptimalRoute", Namespace="http://schemas.datacontract.org/2004/07/Back_End")]
    [System.SerializableAttribute()]
    public partial class ConfigOptimalRoute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Maximum_HourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Unload_TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Maximum_Hour {
            get {
                return this.Maximum_HourField;
            }
            set {
                if ((this.Maximum_HourField.Equals(value) != true)) {
                    this.Maximum_HourField = value;
                    this.RaisePropertyChanged("Maximum_Hour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Unload_Time {
            get {
                return this.Unload_TimeField;
            }
            set {
                if ((this.Unload_TimeField.Equals(value) != true)) {
                    this.Unload_TimeField = value;
                    this.RaisePropertyChanged("Unload_Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Article", Namespace="http://schemas.datacontract.org/2004/07/Back_End")]
    [System.SerializableAttribute()]
    public partial class Article : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UnitTest_Back_End.ServiceReference1.ColorType ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UnitTest_Back_End.ServiceReference1.ColorType Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ColorType", Namespace="http://schemas.datacontract.org/2004/07/Back_End")]
    public enum ColorType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GEEN = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZWART = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZILVER = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIT = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GRIJS = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Orders", Namespace="http://schemas.datacontract.org/2004/07/Back_End")]
    [System.SerializableAttribute()]
    public partial class Orders : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UnitTest_Back_End.ServiceReference1.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeliveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UnitTest_Back_End.ServiceReference1.Order_Detail[] OrderDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RevceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UnitTest_Back_End.ServiceReference1.OrderType orderTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UnitTest_Back_End.ServiceReference1.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Delivered {
            get {
                return this.DeliveredField;
            }
            set {
                if ((this.DeliveredField.Equals(value) != true)) {
                    this.DeliveredField = value;
                    this.RaisePropertyChanged("Delivered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UnitTest_Back_End.ServiceReference1.Order_Detail[] OrderDetails {
            get {
                return this.OrderDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDetailsField, value) != true)) {
                    this.OrderDetailsField = value;
                    this.RaisePropertyChanged("OrderDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Revceived {
            get {
                return this.RevceivedField;
            }
            set {
                if ((this.RevceivedField.Equals(value) != true)) {
                    this.RevceivedField = value;
                    this.RaisePropertyChanged("Revceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                if ((this.dateTimeField.Equals(value) != true)) {
                    this.dateTimeField = value;
                    this.RaisePropertyChanged("dateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UnitTest_Back_End.ServiceReference1.OrderType orderType {
            get {
                return this.orderTypeField;
            }
            set {
                if ((this.orderTypeField.Equals(value) != true)) {
                    this.orderTypeField = value;
                    this.RaisePropertyChanged("orderType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order_Detail", Namespace="http://schemas.datacontract.org/2004/07/Back_End")]
    [System.SerializableAttribute()]
    public partial class Order_Detail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UnitTest_Back_End.ServiceReference1.Article ArticleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArticleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UnitTest_Back_End.ServiceReference1.Orders OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UnitTest_Back_End.ServiceReference1.Article Article {
            get {
                return this.ArticleField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleField, value) != true)) {
                    this.ArticleField = value;
                    this.RaisePropertyChanged("Article");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArticleId {
            get {
                return this.ArticleIdField;
            }
            set {
                if ((this.ArticleIdField.Equals(value) != true)) {
                    this.ArticleIdField = value;
                    this.RaisePropertyChanged("ArticleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UnitTest_Back_End.ServiceReference1.Orders Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderType", Namespace="http://schemas.datacontract.org/2004/07/Back_End")]
    public enum OrderType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BACKORDER = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ORDER = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCustomer", ReplyAction="http://tempuri.org/IService/GetCustomerResponse")]
        UnitTest_Back_End.ServiceReference1.Customer[] GetCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCustomer", ReplyAction="http://tempuri.org/IService/GetCustomerResponse")]
        System.Threading.Tasks.Task<UnitTest_Back_End.ServiceReference1.Customer[]> GetCustomerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertCustomer", ReplyAction="http://tempuri.org/IService/InsertCustomerResponse")]
        void InsertCustomer(UnitTest_Back_End.ServiceReference1.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertCustomer", ReplyAction="http://tempuri.org/IService/InsertCustomerResponse")]
        System.Threading.Tasks.Task InsertCustomerAsync(UnitTest_Back_End.ServiceReference1.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCustomer", ReplyAction="http://tempuri.org/IService/UpdateCustomerResponse")]
        void UpdateCustomer(UnitTest_Back_End.ServiceReference1.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCustomer", ReplyAction="http://tempuri.org/IService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task UpdateCustomerAsync(UnitTest_Back_End.ServiceReference1.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCustomer", ReplyAction="http://tempuri.org/IService/DeleteCustomerResponse")]
        void DeleteCustomer(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCustomer", ReplyAction="http://tempuri.org/IService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task DeleteCustomerAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertDistanceInfo", ReplyAction="http://tempuri.org/IService/InsertDistanceInfoResponse")]
        void InsertDistanceInfo(UnitTest_Back_End.ServiceReference1.Distance_Table[] distance_info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertDistanceInfo", ReplyAction="http://tempuri.org/IService/InsertDistanceInfoResponse")]
        System.Threading.Tasks.Task InsertDistanceInfoAsync(UnitTest_Back_End.ServiceReference1.Distance_Table[] distance_info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOptimalRoute", ReplyAction="http://tempuri.org/IService/GetOptimalRouteResponse")]
        UnitTest_Back_End.ServiceReference1.Distance_Table[] GetOptimalRoute();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOptimalRoute", ReplyAction="http://tempuri.org/IService/GetOptimalRouteResponse")]
        System.Threading.Tasks.Task<UnitTest_Back_End.ServiceReference1.Distance_Table[]> GetOptimalRouteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOptimalRoute_Config", ReplyAction="http://tempuri.org/IService/InsertOptimalRoute_ConfigResponse")]
        void InsertOptimalRoute_Config(UnitTest_Back_End.ServiceReference1.ConfigOptimalRoute configData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOptimalRoute_Config", ReplyAction="http://tempuri.org/IService/InsertOptimalRoute_ConfigResponse")]
        System.Threading.Tasks.Task InsertOptimalRoute_ConfigAsync(UnitTest_Back_End.ServiceReference1.ConfigOptimalRoute configData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOptimalRoute_Config", ReplyAction="http://tempuri.org/IService/GetOptimalRoute_ConfigResponse")]
        UnitTest_Back_End.ServiceReference1.ConfigOptimalRoute[] GetOptimalRoute_Config();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOptimalRoute_Config", ReplyAction="http://tempuri.org/IService/GetOptimalRoute_ConfigResponse")]
        System.Threading.Tasks.Task<UnitTest_Back_End.ServiceReference1.ConfigOptimalRoute[]> GetOptimalRoute_ConfigAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetArticle", ReplyAction="http://tempuri.org/IService/GetArticleResponse")]
        UnitTest_Back_End.ServiceReference1.Article[] GetArticle();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetArticle", ReplyAction="http://tempuri.org/IService/GetArticleResponse")]
        System.Threading.Tasks.Task<UnitTest_Back_End.ServiceReference1.Article[]> GetArticleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertArticle", ReplyAction="http://tempuri.org/IService/InsertArticleResponse")]
        void InsertArticle(UnitTest_Back_End.ServiceReference1.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertArticle", ReplyAction="http://tempuri.org/IService/InsertArticleResponse")]
        System.Threading.Tasks.Task InsertArticleAsync(UnitTest_Back_End.ServiceReference1.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateArticle", ReplyAction="http://tempuri.org/IService/UpdateArticleResponse")]
        void UpdateArticle(UnitTest_Back_End.ServiceReference1.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateArticle", ReplyAction="http://tempuri.org/IService/UpdateArticleResponse")]
        System.Threading.Tasks.Task UpdateArticleAsync(UnitTest_Back_End.ServiceReference1.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteArticle", ReplyAction="http://tempuri.org/IService/DeleteArticleResponse")]
        void DeleteArticle(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteArticle", ReplyAction="http://tempuri.org/IService/DeleteArticleResponse")]
        System.Threading.Tasks.Task DeleteArticleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOrders", ReplyAction="http://tempuri.org/IService/GetOrdersResponse")]
        UnitTest_Back_End.ServiceReference1.Orders[] GetOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOrders", ReplyAction="http://tempuri.org/IService/GetOrdersResponse")]
        System.Threading.Tasks.Task<UnitTest_Back_End.ServiceReference1.Orders[]> GetOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrder", ReplyAction="http://tempuri.org/IService/InsertOrderResponse")]
        void InsertOrder(UnitTest_Back_End.ServiceReference1.Orders order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrder", ReplyAction="http://tempuri.org/IService/InsertOrderResponse")]
        System.Threading.Tasks.Task InsertOrderAsync(UnitTest_Back_End.ServiceReference1.Orders order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateOrder", ReplyAction="http://tempuri.org/IService/UpdateOrderResponse")]
        void UpdateOrder(UnitTest_Back_End.ServiceReference1.Orders order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateOrder", ReplyAction="http://tempuri.org/IService/UpdateOrderResponse")]
        System.Threading.Tasks.Task UpdateOrderAsync(UnitTest_Back_End.ServiceReference1.Orders order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteOrder", ReplyAction="http://tempuri.org/IService/DeleteOrderResponse")]
        void DeleteOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteOrder", ReplyAction="http://tempuri.org/IService/DeleteOrderResponse")]
        System.Threading.Tasks.Task DeleteOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOrders_Detail", ReplyAction="http://tempuri.org/IService/GetOrders_DetailResponse")]
        UnitTest_Back_End.ServiceReference1.Order_Detail[] GetOrders_Detail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOrders_Detail", ReplyAction="http://tempuri.org/IService/GetOrders_DetailResponse")]
        System.Threading.Tasks.Task<UnitTest_Back_End.ServiceReference1.Order_Detail[]> GetOrders_DetailAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrder_Detail", ReplyAction="http://tempuri.org/IService/InsertOrder_DetailResponse")]
        void InsertOrder_Detail(UnitTest_Back_End.ServiceReference1.Order_Detail order_detail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertOrder_Detail", ReplyAction="http://tempuri.org/IService/InsertOrder_DetailResponse")]
        System.Threading.Tasks.Task InsertOrder_DetailAsync(UnitTest_Back_End.ServiceReference1.Order_Detail order_detail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateOrder_Detail", ReplyAction="http://tempuri.org/IService/UpdateOrder_DetailResponse")]
        void UpdateOrder_Detail(UnitTest_Back_End.ServiceReference1.Order_Detail order_detail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateOrder_Detail", ReplyAction="http://tempuri.org/IService/UpdateOrder_DetailResponse")]
        System.Threading.Tasks.Task UpdateOrder_DetailAsync(UnitTest_Back_End.ServiceReference1.Order_Detail order_detail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteOrder_Detail", ReplyAction="http://tempuri.org/IService/DeleteOrder_DetailResponse")]
        void DeleteOrder_Detail(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteOrder_Detail", ReplyAction="http://tempuri.org/IService/DeleteOrder_DetailResponse")]
        System.Threading.Tasks.Task DeleteOrder_DetailAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : UnitTest_Back_End.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<UnitTest_Back_End.ServiceReference1.IService>, UnitTest_Back_End.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public UnitTest_Back_End.ServiceReference1.Customer[] GetCustomer() {
            return base.Channel.GetCustomer();
        }
        
        public System.Threading.Tasks.Task<UnitTest_Back_End.ServiceReference1.Customer[]> GetCustomerAsync() {
            return base.Channel.GetCustomerAsync();
        }
        
        public void InsertCustomer(UnitTest_Back_End.ServiceReference1.Customer customer) {
            base.Channel.InsertCustomer(customer);
        }
        
        public System.Threading.Tasks.Task InsertCustomerAsync(UnitTest_Back_End.ServiceReference1.Customer customer) {
            return base.Channel.InsertCustomerAsync(customer);
        }
        
        public void UpdateCustomer(UnitTest_Back_End.ServiceReference1.Customer customer) {
            base.Channel.UpdateCustomer(customer);
        }
        
        public System.Threading.Tasks.Task UpdateCustomerAsync(UnitTest_Back_End.ServiceReference1.Customer customer) {
            return base.Channel.UpdateCustomerAsync(customer);
        }
        
        public void DeleteCustomer(string id) {
            base.Channel.DeleteCustomer(id);
        }
        
        public System.Threading.Tasks.Task DeleteCustomerAsync(string id) {
            return base.Channel.DeleteCustomerAsync(id);
        }
        
        public void InsertDistanceInfo(UnitTest_Back_End.ServiceReference1.Distance_Table[] distance_info) {
            base.Channel.InsertDistanceInfo(distance_info);
        }
        
        public System.Threading.Tasks.Task InsertDistanceInfoAsync(UnitTest_Back_End.ServiceReference1.Distance_Table[] distance_info) {
            return base.Channel.InsertDistanceInfoAsync(distance_info);
        }
        
        public UnitTest_Back_End.ServiceReference1.Distance_Table[] GetOptimalRoute() {
            return base.Channel.GetOptimalRoute();
        }
        
        public System.Threading.Tasks.Task<UnitTest_Back_End.ServiceReference1.Distance_Table[]> GetOptimalRouteAsync() {
            return base.Channel.GetOptimalRouteAsync();
        }
        
        public void InsertOptimalRoute_Config(UnitTest_Back_End.ServiceReference1.ConfigOptimalRoute configData) {
            base.Channel.InsertOptimalRoute_Config(configData);
        }
        
        public System.Threading.Tasks.Task InsertOptimalRoute_ConfigAsync(UnitTest_Back_End.ServiceReference1.ConfigOptimalRoute configData) {
            return base.Channel.InsertOptimalRoute_ConfigAsync(configData);
        }
        
        public UnitTest_Back_End.ServiceReference1.ConfigOptimalRoute[] GetOptimalRoute_Config() {
            return base.Channel.GetOptimalRoute_Config();
        }
        
        public System.Threading.Tasks.Task<UnitTest_Back_End.ServiceReference1.ConfigOptimalRoute[]> GetOptimalRoute_ConfigAsync() {
            return base.Channel.GetOptimalRoute_ConfigAsync();
        }
        
        public UnitTest_Back_End.ServiceReference1.Article[] GetArticle() {
            return base.Channel.GetArticle();
        }
        
        public System.Threading.Tasks.Task<UnitTest_Back_End.ServiceReference1.Article[]> GetArticleAsync() {
            return base.Channel.GetArticleAsync();
        }
        
        public void InsertArticle(UnitTest_Back_End.ServiceReference1.Article article) {
            base.Channel.InsertArticle(article);
        }
        
        public System.Threading.Tasks.Task InsertArticleAsync(UnitTest_Back_End.ServiceReference1.Article article) {
            return base.Channel.InsertArticleAsync(article);
        }
        
        public void UpdateArticle(UnitTest_Back_End.ServiceReference1.Article article) {
            base.Channel.UpdateArticle(article);
        }
        
        public System.Threading.Tasks.Task UpdateArticleAsync(UnitTest_Back_End.ServiceReference1.Article article) {
            return base.Channel.UpdateArticleAsync(article);
        }
        
        public void DeleteArticle(int id) {
            base.Channel.DeleteArticle(id);
        }
        
        public System.Threading.Tasks.Task DeleteArticleAsync(int id) {
            return base.Channel.DeleteArticleAsync(id);
        }
        
        public UnitTest_Back_End.ServiceReference1.Orders[] GetOrders() {
            return base.Channel.GetOrders();
        }
        
        public System.Threading.Tasks.Task<UnitTest_Back_End.ServiceReference1.Orders[]> GetOrdersAsync() {
            return base.Channel.GetOrdersAsync();
        }
        
        public void InsertOrder(UnitTest_Back_End.ServiceReference1.Orders order) {
            base.Channel.InsertOrder(order);
        }
        
        public System.Threading.Tasks.Task InsertOrderAsync(UnitTest_Back_End.ServiceReference1.Orders order) {
            return base.Channel.InsertOrderAsync(order);
        }
        
        public void UpdateOrder(UnitTest_Back_End.ServiceReference1.Orders order) {
            base.Channel.UpdateOrder(order);
        }
        
        public System.Threading.Tasks.Task UpdateOrderAsync(UnitTest_Back_End.ServiceReference1.Orders order) {
            return base.Channel.UpdateOrderAsync(order);
        }
        
        public void DeleteOrder(int id) {
            base.Channel.DeleteOrder(id);
        }
        
        public System.Threading.Tasks.Task DeleteOrderAsync(int id) {
            return base.Channel.DeleteOrderAsync(id);
        }
        
        public UnitTest_Back_End.ServiceReference1.Order_Detail[] GetOrders_Detail() {
            return base.Channel.GetOrders_Detail();
        }
        
        public System.Threading.Tasks.Task<UnitTest_Back_End.ServiceReference1.Order_Detail[]> GetOrders_DetailAsync() {
            return base.Channel.GetOrders_DetailAsync();
        }
        
        public void InsertOrder_Detail(UnitTest_Back_End.ServiceReference1.Order_Detail order_detail) {
            base.Channel.InsertOrder_Detail(order_detail);
        }
        
        public System.Threading.Tasks.Task InsertOrder_DetailAsync(UnitTest_Back_End.ServiceReference1.Order_Detail order_detail) {
            return base.Channel.InsertOrder_DetailAsync(order_detail);
        }
        
        public void UpdateOrder_Detail(UnitTest_Back_End.ServiceReference1.Order_Detail order_detail) {
            base.Channel.UpdateOrder_Detail(order_detail);
        }
        
        public System.Threading.Tasks.Task UpdateOrder_DetailAsync(UnitTest_Back_End.ServiceReference1.Order_Detail order_detail) {
            return base.Channel.UpdateOrder_DetailAsync(order_detail);
        }
        
        public void DeleteOrder_Detail(int id) {
            base.Channel.DeleteOrder_Detail(id);
        }
        
        public System.Threading.Tasks.Task DeleteOrder_DetailAsync(int id) {
            return base.Channel.DeleteOrder_DetailAsync(id);
        }
    }
}
